# Setup mellanox
ip link set enp66s0 mtu 9000
ip link set enp66s0 up

# Setup OVS  MGMT
ip link add link enp66s0 name ovs-mgmt type vlan id 10
ip addr add 4.0.0.6/24 brd + dev ovs-mgmt
ip link  set ovs-mgmt mtu 9000
ip link  set ovs-mgmt up

# Setup LINSTOR MGMT
ip link add link enp66s0 name linstor-mgmt type vlan id 20
ip addr add 4.0.1.6/24 brd + dev linstor-mgmt
ip link  set linstor-mgmt mtu 9000
ip link  set linstor-mgmt up

# Setup INCUS MGMT
ip link add link enp66s0 name incus-mgmt type vlan id 30
ip addr add 4.0.2.6/24 brd + dev incus-mgmt
ip link  set incus-mgmt mtu 9000
ip link  set incus-mgmt up

# # Setup admin-labs UPLINK network
ip link add link enp66s0 name admin-labs type vlan id 40
ip link set admin-labs mtu 9000
ip link set admin-labs up

# # Setup research-labs UPLINK network
ip link add link enp66s0 name research-labs type vlan id 50
ip link set research-labs mtu 9000
ip link set research-labs up

# Setup bdebruhl UPLINK network
ip link add link enp66s0 name bdebruhl type vlan id 60
ip link set bdebruhl mtu 9000
ip link set bdebruhl up

# Setup phoenix UPLINK network
ip link add link enp66s0 name dofang type vlan id 70
ip link set dofang mtu 9000
ip link set dofang up

# Setup bahartma UPLINK network
ip link add link enp66s0 name bahartma type vlan id 80
ip link set bahartma mtu 9000
ip link set bahartma up

# Setup infra UPLINK network
ip link add link enp66s0 name infra type vlan id 90
ip link set infra mtu 9000
ip link set infra up

# Setup srbeard UPLINK network
ip link add link enp66s0 name srbeard type vlan id 100
ip link set srbeard mtu 9000
ip link set srbeard up


MTU=9000

echo "=== Linux interfaces (except lo and eno*) ==="
for iface in $(ls /sys/class/net | grep -v '^lo$' | grep -v '^eno'); do
  echo "Setting $iface to MTU=$MTU"
  ip link set dev "$iface" mtu $MTU || echo "⚠️ Failed $iface"
done

echo
echo "=== OVS existing ports ==="
if command -v ovs-vsctl >/dev/null 2>&1; then
  for port in $(ovs-vsctl list Interface | awk -F\" '/^name/{print $2}'); do
    echo "Setting OVS port $port MTU=$MTU"
    ovs-vsctl set Interface "$port" mtu_request=$MTU || echo "⚠️ Failed $port"
  done

  echo
  echo "=== OVS global default MTU ==="
  ovs-vsctl set Open_vSwitch . other_config:mtu_default=$MTU
else
  echo "⚠️ ovs-vsctl not found"
fi
ethtool -A enp66s0 rx on tx on
#echo off > /sys/devices/system/cpu/smt/control
ethtool -G enp66s0 rx 8192 tx 8192
